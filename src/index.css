@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Futuristic Dark Theme - Based on Matrix Green Aesthetic */
    --background: 210 11% 4%;
    --foreground: 147 80% 85%;

    --card: 210 11% 6%;
    --card-foreground: 147 80% 85%;

    --popover: 210 11% 6%;
    --popover-foreground: 147 80% 85%;

    --primary: 147 80% 50%;
    --primary-foreground: 210 11% 4%;

    --secondary: 210 11% 8%;
    --secondary-foreground: 147 80% 85%;

    --muted: 210 11% 8%;
    --muted-foreground: 147 30% 60%;

    --accent: 147 80% 50%;
    --accent-foreground: 210 11% 4%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 147 80% 85%;

    --border: 147 80% 20%;
    --input: 210 11% 8%;
    --ring: 147 80% 50%;

    --radius: 0.75rem;

    /* Custom Futuristic Colors */
    --neon-green: 147 80% 50%;
    --neon-green-glow: 147 80% 60%;
    --matrix-dark: 210 11% 4%;
    --matrix-darker: 210 11% 2%;
    --glass-bg: 210 11% 6%;
    --glass-border: 147 80% 30%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--neon-green-glow)));
    --gradient-glass: linear-gradient(135deg, hsla(var(--glass-bg), 0.2), hsla(var(--glass-bg), 0.8));
    --gradient-glow: radial-gradient(circle, hsla(var(--neon-green), 0.3), transparent);

    /* Shadows & Glows */
    --shadow-neon: 0 0 20px hsla(var(--neon-green), 0.5);
    --shadow-glow: 0 0 40px hsla(var(--neon-green), 0.3);
    --shadow-card: 0 8px 32px hsla(210, 11%, 2%, 0.8);

    /* Animation Variables */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  /* Force dark mode always */
  .dark {
    --background: 210 11% 4%;
    --foreground: 147 80% 85%;
    --card: 210 11% 6%;
    --card-foreground: 147 80% 85%;
    --popover: 210 11% 6%;
    --popover-foreground: 147 80% 85%;
    --primary: 147 80% 50%;
    --primary-foreground: 210 11% 4%;
    --secondary: 210 11% 8%;
    --secondary-foreground: 147 80% 85%;
    --muted: 210 11% 8%;
    --muted-foreground: 147 30% 60%;
    --accent: 147 80% 50%;
    --accent-foreground: 210 11% 4%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 147 80% 85%;
    --border: 147 80% 20%;
    --input: 210 11% 8%;
    --ring: 147 80% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', system-ui, -apple-system, sans-serif;
    overflow-x: hidden;
  }

  /* Matrix Rain Background Effect */
  .matrix-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: hsl(var(--matrix-darker));
    z-index: -2;
  }

  .matrix-rain {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        hsla(var(--neon-green), 0.03) 2px,
        hsla(var(--neon-green), 0.03) 4px
      ),
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 2px,
        hsla(var(--neon-green), 0.03) 2px,
        hsla(var(--neon-green), 0.03) 4px
      );
    animation: matrix-scroll 20s linear infinite;
  }

  @keyframes matrix-scroll {
    0% { transform: translateY(0); }
    100% { transform: translateY(50px); }
  }

  /* Glassmorphism Cards */
  .glass-card {
    background: var(--gradient-glass);
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--glass-border) / 0.3);
    box-shadow: var(--shadow-card);
    transition: var(--transition-smooth);
  }

  .glass-card:hover {
    border-color: hsl(var(--neon-green) / 0.6);
    box-shadow: var(--shadow-neon);
    transform: translateY(-5px);
  }

  /* Neon Glow Effects */
  .neon-glow {
    box-shadow: var(--shadow-neon);
    transition: var(--transition-smooth);
  }

  .neon-glow:hover {
    box-shadow: var(--shadow-glow);
  }

  /* Floating Animation */
  .float-animation {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(5deg); }
  }

  /* Pulse Glow */
  .pulse-glow {
    animation: pulse-neon 2s ease-in-out infinite;
  }

  @keyframes pulse-neon {
    0%, 100% { box-shadow: var(--shadow-neon); }
    50% { box-shadow: var(--shadow-glow); }
  }

  /* Text Glow */
  .text-glow {
    text-shadow: 0 0 10px hsl(var(--neon-green));
  }

  /* Loading Progress Bar */
  .progress-bar {
    background: var(--gradient-primary);
    box-shadow: var(--shadow-neon);
    border-radius: 4px;
  }

  /* Custom Scrollbar */
  ::-webkit-scrollbar {
    width: 6px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--matrix-dark));
  }

  ::-webkit-scrollbar-thumb {
    background: var(--gradient-primary);
    border-radius: 3px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--neon-green-glow));
  }

  /* Hide elements for loading animation */
  .preloader-hidden {
    opacity: 0;
    visibility: hidden;
  }
}
